name: Build and Push to Artifact Registry

on:
  push:
    branches: ["main"]
  # pull_request:
  #   branches: ["main"]

env:
  PROJECT_ID: prj-diameterhealth-working
  REGION: us-central1
  GAR_LOCATION: us-central1-docker.pkg.dev/prj-diameterhealth-working/docker-repo
  IMAGE_NAME: test
  TERRAFORM_WORKING_DIR: ./terraform
  TERRAFORM_VERSION: latest

jobs:
  build-push-artifact:
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout"
        uses: "actions/checkout@v3"

      - id: "auth"
        uses: "google-github-actions/auth@v1"
        with:
          credentials_json: "${{ secrets.SERVICE_ACCOUNT_KEY }}"

      - name: "Set up Cloud SDK"
        uses: "google-github-actions/setup-gcloud@v1"

      # - name: "Use gcloud CLI"
      #   run: "gcloud info"

      - name: "Docker auth"
        run: |-
          gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev --quiet
          
      - name: Build image
        run: docker build . --file Dockerfile --tag ${{ env.GAR_LOCATION }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
        working-directory: ./test

      - name: Push image
        run: docker push ${{ env.GAR_LOCATION }}/${{ env.IMAGE_NAME }}:${{ github.sha }}

  # terraform job
  terraform-execution:
    runs-on: ubuntu-latest
    steps:
      # - name: Set GCP environment
      #   id: set_gcp_env
      #   run: echo ::set-env name=BRANCH_NAME::$(echo ${GITHUB_BASE_REF#refs/heads/})  
      - name: checkout
        id: checkout_code
        uses: actions/checkout@v2

      - id: "auth"
        uses: "google-github-actions/auth@v1"
        with:
          credentials_json: "${{ secrets.SERVICE_ACCOUNT_KEY }}"
          create_credentials_file: true
          export_environment_variables: true
      
      - name: "Set up Cloud SDK"
        uses: "google-github-actions/setup-gcloud@v2"

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
            terraform_version: 1.5.7
      
      - name: Terraform init and validate
        run: |
          terraform init -chdir=${{ env.TERRAFORM_WORKING_DIR }}

      - name: Terraform plan
        run: |
          terraform plan -chdir=${{ env.TERRAFORM_WORKING_DIR }}